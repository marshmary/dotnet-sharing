// <auto-generated />
using System;
using BookApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BookApi.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.27")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BookApi.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PublishDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Author 1",
                            PublishDate = new DateTime(2024, 3, 2, 14, 34, 40, 976, DateTimeKind.Local).AddTicks(9764),
                            Title = "Book 1"
                        },
                        new
                        {
                            Id = 2,
                            Author = "Author 2",
                            PublishDate = new DateTime(2024, 3, 2, 14, 34, 40, 976, DateTimeKind.Local).AddTicks(9783),
                            Title = "Book 2"
                        },
                        new
                        {
                            Id = 3,
                            Author = "Author 3",
                            PublishDate = new DateTime(2024, 3, 2, 14, 34, 40, 976, DateTimeKind.Local).AddTicks(9784),
                            Title = "Book 3"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
